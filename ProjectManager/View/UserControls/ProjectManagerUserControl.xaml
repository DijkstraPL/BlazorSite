<UserControl x:Class="ProjectManager.View.ProjectManagerUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProjectManager.View"
             xmlns:conv="clr-namespace:ProjectManager.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="650" d:DesignWidth="600">
    <UserControl.Resources>
        <ResourceDictionary>
            <conv:BoolToVisibleConverter x:Key="boolToVisibleConverter"/>
            <conv:BoolToVisibleReverseConverter x:Key="boolToVisibleReverseConverter"/>
            <conv:MathConverter x:Key="mathConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="200" MaxWidth="400"/>
            <ColumnDefinition  Width="*" MinWidth="200"/>
            <ColumnDefinition  Width="0.7*" MinWidth="100"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" MinHeight="280"/>
        </Grid.RowDefinitions>

        <!--Main WINDOW-->
        <Border Background="Gainsboro" CornerRadius="15" Padding="5" BorderThickness="2" BorderBrush="DarkBlue" Margin="5" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" x:Name="wMainWindow">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="2"/>
                    <ColumnDefinition Width="143"/>
                </Grid.ColumnDefinitions>

                <Button Width="70" Height="30" Content="New" Margin="3,0,3,0" Grid.Column="0"  Cursor="Hand"/>
                <Button Width="70" Height="30" Content="Save" Margin="3,0,3,0" Grid.Column="1" Cursor="Hand"/>
                <Button Width="70" Height="30" Content="Load" Margin="3,0,3,0" Grid.Column="2" HorizontalAlignment="Left" Cursor="Hand"/>

                <Grid Background="DarkBlue" Grid.Column="3" Margin="0,-5,0,-5"/>
                <Border Background="White" Margin="0,-5,-5,-5" Grid.Column="4" CornerRadius="0,15,15,0" >
                    <Image  Margin="15,0,15,0" 
                            Cursor="Hand"/>
                </Border>

            </Grid>
        </Border>

        <!--Project INFO-->
        <Border Background="Gainsboro" CornerRadius="15" Padding="5" BorderThickness="2" BorderBrush="DarkBlue" Margin="5" Grid.Column="0" Grid.Row="1" x:Name="wProjectInfo">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="110"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Project number: "  Grid.Row="0" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <TextBox Height="25"  Width="Auto" Grid.Row="0" Grid.Column="1" Margin="2" Text="{Binding Number}"/>

                <TextBlock Text="Project name: "  Grid.Row="1" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <TextBox Height="25"  Width="Auto" Grid.Row="1" Grid.Column="1" Margin="2" Text="{Binding Name}" />

                <TextBlock Text="Designer: "  Grid.Row="2" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <TextBox Height="25"  Width="Auto" Grid.Row="2" Grid.Column="1" Margin="2" Text="{Binding Designer}"/>

                <TextBlock Text="Date: "  Grid.Row="4" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <DatePicker Height="25"  Width="Auto" Grid.Row="4" Grid.Column="1" Margin="2"  SelectedDate="{Binding Date}"/>

                <TextBlock Text="Controller: "  Grid.Row="5" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <TextBox Height="25"  Width="Auto" Grid.Row="5" Grid.Column="1" Margin="2" Text="{Binding Controller}"/>

                <TextBlock Text="Date: "  Grid.Row="6" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <DatePicker Height="25"  Width="Auto" Grid.Row="6" Grid.Column="1" Margin="2"  SelectedDate="{Binding ControllerDate}"/>

                <TextBlock Text="Revision: "  Grid.Row="7" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <TextBox Height="25"  Width="Auto" Grid.Row="7" Grid.Column="1" Margin="2" Text="{Binding Revision}" x:Name="wRevision"/>

                <TextBlock Text="Revision date: "  Grid.Row="8" Grid.Column="0" Margin="2" VerticalAlignment="Center" Visibility="{Binding ElementName=wRevision, Path=Text.IsEmpty, Converter={StaticResource boolToVisibleReverseConverter}}"/>
                <DatePicker Height="25"  Width="Auto" Grid.Row="8" Grid.Column="1" Margin="2" SelectedDate="{Binding RevisionDate}" Visibility="{Binding ElementName=wRevision, Path=Text.IsEmpty, Converter={StaticResource boolToVisibleReverseConverter}}"/>

            </Grid>
        </Border>

        <!--Slab DIMENSIONS-->
        <Border Background="Gainsboro" CornerRadius="15" Padding="5" BorderThickness="2" BorderBrush="DarkBlue" Margin="5" Grid.Column="1" Grid.Row="1" x:Name="wSlabDimension">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="110"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Slab length: "  Grid.Row="0" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <TextBox Height="25"  Width="Auto" Grid.Row="0" Grid.Column="1" Margin="2" Text="{Binding Length}"/>

                <TextBlock Text="Slab width: "  Grid.Row="1" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <TextBox Height="25"  Width="Auto" Grid.Row="1" Grid.Column="1" Margin="2" Text="{Binding Width}"/>

                <TextBlock Text="Left support: "  Grid.Row="2" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <TextBox Height="25"  Width="Auto" Grid.Row="2" Grid.Column="1" Margin="2" Text="{Binding LeftSupport}" />

                <TextBlock Text="Left support width: "  Grid.Row="3" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <TextBox Height="25"  Width="Auto" Grid.Row="3" Grid.Column="1" Margin="2" Text="{Binding LeftSupportWidth}"/>

                <TextBlock Text="Right support: "  Grid.Row="4" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <TextBox Height="25"  Width="Auto" Grid.Row="4" Grid.Column="1" Margin="2" Text="{Binding RightSupport}"/>

                <TextBlock Text="Right support width: "  Grid.Row="5" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <TextBox Height="25"  Width="Auto" Grid.Row="5" Grid.Column="1" Margin="2" Text="{Binding RightSupportWidth}"/>

            </Grid>
        </Border>

        <!--Element INFO-->
        <Border Background="Gainsboro" CornerRadius="15" Padding="5" BorderThickness="2" BorderBrush="DarkBlue" Margin="5" Grid.Column="0" Grid.Row="2">
            <Grid x:Name="wSlabProperties">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="110"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="Element Name: "  Grid.Row="0" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <TextBox Height="25" Width="Auto" Grid.Row="0" Grid.Column="1" Margin="2" Text="{Binding SlabName}"/>

                <TextBlock Text="Load category: "  Grid.Row="1" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <ComboBox x:Name ="wLdCtgr" Height="25" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Margin="2" IsEditable="True" Text="{Binding LoadCategory}"
                                          Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid},Path=ActualWidth, Converter= {StaticResource mathConverter},ConverterParameter=x-114 }">
                    <ComboBoxItem>A</ComboBoxItem>
                    <ComboBoxItem>B</ComboBoxItem>
                    <ComboBoxItem>C1</ComboBoxItem>
                    <ComboBoxItem>C2</ComboBoxItem>
                    <ComboBoxItem>C3</ComboBoxItem>
                    <ComboBoxItem>C4</ComboBoxItem>
                    <ComboBoxItem>C5</ComboBoxItem>
                    <ComboBoxItem>D1</ComboBoxItem>
                    <ComboBoxItem>D2</ComboBoxItem>
                    <ComboBoxItem>E</ComboBoxItem>
                    <ComboBoxItem>F</ComboBoxItem>
                    <ComboBoxItem>G</ComboBoxItem>
                </ComboBox>

                <TextBlock Text="Consequence class: "  Grid.Row="2" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <ComboBox Height="25" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" Margin="2" Text="{Binding ConsequenceClass}" IsEditable="True"
                                          Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid},Path=ActualWidth, Converter= {StaticResource mathConverter},ConverterParameter=x-114 }">
                    <ComboBoxItem>CC1</ComboBoxItem>
                    <ComboBoxItem>CC2</ComboBoxItem>
                    <ComboBoxItem>CC3</ComboBoxItem>
                </ComboBox>

                <TextBlock Text="Reliability class: "  Grid.Row="3" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <ComboBox Height="25" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" Margin="2" Text="{Binding ConsequenceClass}" IsEditable="True"
                                          Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid},Path=ActualWidth, Converter= {StaticResource mathConverter},ConverterParameter=x-114 }">
                    <ComboBoxItem>RC1</ComboBoxItem>
                    <ComboBoxItem>RC2</ComboBoxItem>
                    <ComboBoxItem>RC3</ComboBoxItem>
                </ComboBox>

                <TextBlock Text="Exposure class: "  Grid.Row="4" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <ComboBox Height="25" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" Margin="2" IsEditable="True" Text="{Binding ExposureClass}"
                                          Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid},Path=ActualWidth, Converter= {StaticResource mathConverter},ConverterParameter=x-114 }">
                    <ComboBoxItem>X0</ComboBoxItem>
                    <ComboBoxItem>XC1</ComboBoxItem>
                    <ComboBoxItem>XC2</ComboBoxItem>
                    <ComboBoxItem>XC3</ComboBoxItem>
                    <ComboBoxItem>XC4</ComboBoxItem>
                    <ComboBoxItem>XD1</ComboBoxItem>
                    <ComboBoxItem>XD2</ComboBoxItem>
                    <ComboBoxItem>XD3</ComboBoxItem>
                    <ComboBoxItem>XD4</ComboBoxItem>
                    <ComboBoxItem>XF1</ComboBoxItem>
                    <ComboBoxItem>XF2</ComboBoxItem>
                    <ComboBoxItem>XF3</ComboBoxItem>
                    <ComboBoxItem>XF4</ComboBoxItem>
                </ComboBox>

                <TextBlock Text="Slab type: "  Grid.Row="5" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <ComboBox Height="25" Grid.Row="5" Grid.Column="1" HorizontalAlignment="Left" Margin="2"  IsEditable="True" Text="{Binding SlabType}"
                          Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid},Path=ActualWidth, Converter= {StaticResource mathConverter},ConverterParameter=x-114 }">
                    <ComboBoxItem>HD200</ComboBoxItem>
                    <ComboBoxItem>HD220</ComboBoxItem>
                    <ComboBoxItem>HD265</ComboBoxItem>
                    <ComboBoxItem>HD285</ComboBoxItem>
                    <ComboBoxItem>HD320</ComboBoxItem>
                    <ComboBoxItem>HD320 Bolig</ComboBoxItem>
                    <ComboBoxItem>HD340</ComboBoxItem>
                    <ComboBoxItem>HD400</ComboBoxItem>
                    <ComboBoxItem>HD420</ComboBoxItem>
                    <ComboBoxItem>HD500</ComboBoxItem>
                    <ComboBoxItem>HD520</ComboBoxItem>
                </ComboBox>

                <TextBlock Text="Fire resistance: "  Grid.Row="6" Grid.Column="0" Margin="2" VerticalAlignment="Center"/>
                <ComboBox Height="25" Grid.Row="6" Grid.Column="1" HorizontalAlignment="Left" Margin="2" Text="{Binding FireResistance}" IsEditable="True"
                                          Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid},Path=ActualWidth, Converter= {StaticResource mathConverter},ConverterParameter=x-114 }">
                    <ComboBoxItem>-</ComboBoxItem>
                    <ComboBoxItem>R15</ComboBoxItem>
                    <ComboBoxItem>R30</ComboBoxItem>
                    <ComboBoxItem>R45</ComboBoxItem>
                    <ComboBoxItem>R60</ComboBoxItem>
                    <ComboBoxItem>R120</ComboBoxItem>
                    <ComboBoxItem>R240</ComboBoxItem>
                </ComboBox>

                <TextBlock Text="Strands: "  Grid.Row="7" Grid.Column="0" VerticalAlignment="Center" Margin="2"/>

                <TextBox Height="25" Width="Auto" MinWidth="100" Grid.Row="7" Grid.Column="1" Name="txtSearchBox" Margin="2" Text="{Binding Strands}"/>

                <TextBlock Text="OK/UK" Grid.Row="7" Grid.Column="1" VerticalAlignment="Center" Margin="7,2" IsHitTestVisible="False"
                                 Foreground="LightSteelBlue" Visibility="{Binding ElementName=txtSearchBox, Path=Text.IsEmpty, Converter={StaticResource boolToVisibleConverter}}" />
                <!-- enter term here
                                <TextBox Height="25" Width="Auto" Grid.Row="5" Grid.Column="1" Margin="2"/> -->

                <Line X1="0" X2="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid},Path=ActualWidth, Converter= {StaticResource mathConverter},ConverterParameter=x-10 }" 
                      Y1="0" Y2="0" Grid.Row="8" Grid.ColumnSpan="2" Margin="2" StrokeThickness="3" Stroke="DarkGreen" HorizontalAlignment="Center" VerticalAlignment="Center"/>


                <Grid Grid.Row="9" Grid.ColumnSpan="2">
                    <StackPanel>
                        <Button Margin="5,0,0,1" Width="40" Height="22" Cursor="Hand" Content="Add" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <Button Margin="5,1,0,-1" Width="40" Height="22" Cursor="Hand" Content="Copy" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <Button Margin="2,0,2,0" Width="40" Height="46" Cursor="Hand">
                            <TextBlock Text="&lt;" FontWeight="Bold" VerticalAlignment="Center" FontSize="35" Margin="0,0,0,7"/>
                        </Button>
                        <Button Margin="2,0,2,0" Width="40" Height="46" Cursor="Hand">
                            <TextBlock Text="&gt;" FontWeight="Bold" VerticalAlignment="Center" FontSize="35" Margin="0,0,0,7"/>
                        </Button>
                    </StackPanel>

                    <StackPanel>
                        <Button Margin="0,0,5,0" Width="40" Height="30" Cursor="Hand" Content="Delete" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                        <TextBlock x:Name="wCounter" Width="Auto" HorizontalAlignment="Right" Margin="0,0,5,0" Text="1/1"/>
                    </StackPanel>
                </Grid>

            </Grid>
        </Border>


        <!--Calc INFO-->
        <Border Background="Gainsboro" CornerRadius="15" Padding="5" BorderThickness="2" BorderBrush="DarkBlue" Margin="5" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!--<ComboBox Margin="2" x:Name="wOptions" SelectedValue="Loads" MinWidth="80"
                          Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid},Path=ActualWidth, Converter= {StaticResource mathConverter},ConverterParameter=x-150 }">
                    <ComboBoxItem IsSelected="True" Tag="Loads">Loads</ComboBoxItem>
                    <ComboBoxItem Tag="Results">Results</ComboBoxItem>
                </ComboBox>-->

                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <RadioButton GroupName="Datas" Content="Loads" IsChecked="True" Margin="5" x:Name="wLoads"/>
                    <RadioButton GroupName="Datas" Content="Results" Margin="5" x:Name="wResults"/>
                </StackPanel>

                <Button Content="Help" Width="40" Height="20" HorizontalAlignment="Right" FontSize="10" />

                <Line X1="0" X2="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid},Path=ActualWidth, Converter= {StaticResource mathConverter},ConverterParameter=x-10 }" 
                      Y1="0" Y2="0" Grid.Row="1" Margin="2" StrokeThickness="3" Stroke="DarkGreen" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                <Grid x:Name="wSlabCalcs" Grid.Row="2" Visibility="{Binding IsChecked, ElementName = wResults, Converter={StaticResource boolToVisibleConverter}}">
                    <!--<Grid.Resources>
                        <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=wOptions, Path=SelectedItem.Tag}" Value="Results">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                    </Style>
                    </Grid.Resources> -->
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="110"/>
                        <ColumnDefinition MinWidth="45" Width="3*"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>


                    <TextBlock Text="Point: "  Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="2"/>
                    <TextBox Height="25" Width="Auto" Grid.Row="0" Grid.Column="1" Margin="2" Text="{Binding Point}"/>

                    <TextBlock Text="Shear: "  Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="2"/>
                    <TextBox Height="25" Width="Auto" Grid.Row="1" Grid.Column="1" Margin="2" Text="{Binding Shear}" x:Name="wShear"
                         Visibility="{Binding ElementName=wShearCheck, Path=IsChecked, Converter={StaticResource boolToVisibleReverseConverter}}"/>
                    <Grid Grid.Row="1" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBox Height="25" Grid.Column="0" Width="Auto" Margin="2" x:Name="wShearMin" 
                         Visibility="{Binding ElementName=wShearCheck, Path=IsChecked, Converter={StaticResource boolToVisibleConverter}}"/>
                        <TextBox Height="25" Grid.Column="1" Width="Auto" Margin="2" x:Name="wShearMax"
                         Visibility="{Binding ElementName=wShearCheck, Path=IsChecked, Converter={StaticResource boolToVisibleConverter}}"/>
                    </Grid>
                    <CheckBox Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="wShearCheck"/>

                    <TextBlock Text="Moment: "  Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="2"/>
                    <TextBox Height="25" Width="Auto" Grid.Row="2" Grid.Column="1" Margin="2" Text="{Binding Moment}" x:Name="wMoment"
                         Visibility="{Binding ElementName=wMomentCheck, Path=IsChecked, Converter={StaticResource boolToVisibleReverseConverter}}"/>
                    <Grid Grid.Row="2" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBox Height="25" Grid.Column="0" Width="Auto" Margin="2" x:Name="wMomentMin" 
                         Visibility="{Binding ElementName=wMomentCheck, Path=IsChecked, Converter={StaticResource boolToVisibleConverter}}"/>
                        <TextBox Height="25" Grid.Column="1" Width="Auto" Margin="2" x:Name="wMomentMax" 
                         Visibility="{Binding ElementName=wMomentCheck, Path=IsChecked, Converter={StaticResource boolToVisibleConverter}}"/>
                    </Grid>
                    <CheckBox Grid.Row="2" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="wMomentCheck"/>

                    <TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Margin="2" TextWrapping="Wrap">
                                    <Run Text="Deflection "/><LineBreak/><Run Text="(l/350 span): "/>
                    </TextBlock>
                    <TextBox Height="25" Width="Auto" Grid.Row="3" Grid.Column="1" Margin="2" Text="{Binding DeflectionSpan350}" x:Name="wDeflectionSpan350"
                         Visibility="{Binding ElementName=wDeflectionSpan350Check, Path=IsChecked, Converter={StaticResource boolToVisibleReverseConverter}}"/>
                    <Grid Grid.Row="3" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBox Height="25" Grid.Column="0" Width="Auto" Margin="2" x:Name="wDeflectionSpan350Min" 
                         Visibility="{Binding ElementName=wDeflectionSpan350Check, Path=IsChecked, Converter={StaticResource boolToVisibleConverter}}"/>
                        <TextBox Height="25" Grid.Column="1" Width="Auto" Margin="2" x:Name="wDeflectionSpan350Max" 
                         Visibility="{Binding ElementName=wDeflectionSpan350Check, Path=IsChecked, Converter={StaticResource boolToVisibleConverter}}"/>
                    </Grid>
                    <CheckBox Grid.Row="3" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="wDeflectionSpan350Check"/>

                    <TextBlock Grid.Row="4" Grid.Column="0" VerticalAlignment="Center" Margin="2" TextWrapping="Wrap">
                                    <Run Text="Deflection "/><LineBreak/><Run Text="(l/250 cantilever): "/>
                    </TextBlock>
                    <TextBox Height="25" Width="Auto" Grid.Row="4" Grid.Column="1" Margin="2" Text="{Binding DeflectionCantilever250}" x:Name="wDeflectionCantilever250"
                         Visibility="{Binding ElementName=wDeflectionCantilever250Check, Path=IsChecked, Converter={StaticResource boolToVisibleReverseConverter}}"/>
                    <Grid Grid.Row="4" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBox Height="25" Grid.Column="0" Width="Auto" Margin="2" x:Name="wDeflectionCantilever250Min" 
                         Visibility="{Binding ElementName=wDeflectionCantilever250Check, Path=IsChecked, Converter={StaticResource boolToVisibleConverter}}"/>
                        <TextBox Height="25" Grid.Column="1" Width="Auto" Margin="2" x:Name="wDeflectionCantilever250Max" 
                         Visibility="{Binding ElementName=wDeflectionCantilever250Check, Path=IsChecked, Converter={StaticResource boolToVisibleConverter}}"/>
                    </Grid>
                    <CheckBox Grid.Row="4" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="wDeflectionCantilever250Check"/>

                    <TextBlock Grid.Row="5" Grid.Column="0" VerticalAlignment="Center" Margin="2" TextWrapping="Wrap">
                                    <Run Text="Deflection "/><LineBreak/><Run Text="(l/350 cantilever): "/>
                    </TextBlock>
                    <TextBox Height="25" Width="Auto" Grid.Row="5" Grid.Column="1" Margin="2" Text="{Binding DeflectionCantilever350}" x:Name="wDeflectionCantilever350"
                         Visibility="{Binding ElementName=wDeflectionCantilever350Check, Path=IsChecked, Converter={StaticResource boolToVisibleReverseConverter}}"/>
                    <Grid Grid.Row="5" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBox Height="25" Grid.Column="0" Width="Auto" Margin="2" x:Name="wDeflectionCantilever350Min"
                         Visibility="{Binding ElementName=wDeflectionCantilever350Check, Path=IsChecked, Converter={StaticResource boolToVisibleConverter}}"/>
                        <TextBox Height="25" Grid.Column="1" Width="Auto" Margin="2" x:Name="wDeflectionCantilever350Max" 
                         Visibility="{Binding ElementName=wDeflectionCantilever350Check, Path=IsChecked, Converter={StaticResource boolToVisibleConverter}}"/>
                    </Grid>
                    <CheckBox Grid.Row="5" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="wDeflectionCantilever350Check"/>

                    <TextBlock Grid.Row="6" Grid.Column="0" VerticalAlignment="Center" Margin="2" Text="Cracking:"/>
                    <TextBox Height="25" Width="Auto" Grid.Row="6" Grid.Column="1" Margin="2" Text="{Binding Cracking}" x:Name="wCracking"
                         Visibility="{Binding ElementName=wCrackingCheck, Path=IsChecked, Converter={StaticResource boolToVisibleReverseConverter}}"/>
                    <Grid Grid.Row="6" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBox Height="25" Grid.Column="0" Width="Auto" Margin="2" x:Name="wCrackingMin" 
                         Visibility="{Binding ElementName=wCrackingCheck, Path=IsChecked, Converter={StaticResource boolToVisibleConverter}}"/>
                        <TextBox Height="25" Grid.Column="1" Width="Auto" Margin="2" x:Name="wCrackingMax" 
                         Visibility="{Binding ElementName=wCrackingCheck, Path=IsChecked, Converter={StaticResource boolToVisibleConverter}}"/>
                    </Grid>
                    <CheckBox Grid.Row="6" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="wCrackingCheck"/>


                    <Line X1="0" X2="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Border},Path=ActualWidth, Converter= {StaticResource mathConverter},ConverterParameter=x-10 }" 
                      Y1="0" Y2="0" Grid.Row="7" Grid.ColumnSpan="3" Margin="2" StrokeThickness="3" Stroke="DarkGreen" HorizontalAlignment="Center" VerticalAlignment="Center"/>


                    <Grid Grid.Row="8" Grid.ColumnSpan="3">
                        <StackPanel>
                            <Button Margin="5,0,0,1" Width="40" Height="22" Cursor="Hand" Content="Add" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <Button Margin="5,1,0,-1" Width="40" Height="22" Cursor="Hand" Content="Copy" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <Button Margin="2,0,2,0" Width="40" Height="46" Cursor="Hand">
                                <TextBlock Text="&lt;" FontWeight="Bold" VerticalAlignment="Center" FontSize="35" Margin="0,0,0,7"/>
                            </Button>
                            <Button Margin="2,0,2,0" Width="40" Height="46" Cursor="Hand">
                                <TextBlock Text="&gt;" FontWeight="Bold" VerticalAlignment="Center" FontSize="35" Margin="0,0,0,7"/>
                            </Button>
                        </StackPanel>

                        <StackPanel>
                            <Button Margin="0,0,5,0" Width="40" Height="30" Cursor="Hand" Content="Delete" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                            <TextBlock x:Name="wCounterCalc" Width="Auto" HorizontalAlignment="Right" Margin="0,0,5,0" Text="1/1"/>
                        </StackPanel>
                    </Grid>


                </Grid>

                <Grid x:Name="wSlabLoads" Grid.Row="2" Height="{Binding ActualHeight, ConverterParameter=x-55, Converter={StaticResource mathConverter}, RelativeSource={RelativeSource AncestorType={x:Type Border}, Mode=FindAncestor}}"
                      Visibility="{Binding IsChecked, ElementName = wLoads, Converter={StaticResource boolToVisibleConverter}}">

                    <DataGrid Margin="5" CanUserAddRows="True" CanUserDeleteRows="True" HorizontalAlignment="Stretch" AutoGenerateColumns="False" x:Name="wDataLoads"
                              Height="Auto" SelectionMode="Extended">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Version" Binding="{Binding Version}" Width="0.5*"/>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="2*"/>
                            <DataGridTextColumn Header="1st value" Binding="{Binding FirstValue}" Width="*"/>
                            <DataGridTextColumn Header="2nd value" Binding="{Binding SecondValue}" Width="*"/>
                            <DataGridTextColumn Header="1st point" Binding="{Binding FirstPoint}" Width="*"/>
                            <DataGridTextColumn Header="2nd point" Binding="{Binding SecondPoint}" Width="*"/>
                            <DataGridTextColumn Header="Units" Binding="{Binding Units}" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>

                </Grid>
            </Grid>
        </Border>

        <!--Raports-->
        <Border Background="Gainsboro" CornerRadius="15" Padding="5" BorderThickness="2" BorderBrush="DarkBlue" Margin="5" Grid.Column="3" Grid.Row="1" Grid.ColumnSpan="3" >
            <Grid>
                <StackPanel>
                    <TextBlock Text="Generate report:" HorizontalAlignment="Center"/>
                    <Button Content="For all"  Grid.ColumnSpan="2" Height="30"  Margin="5"
                            Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid},Path=ActualWidth, Converter= {StaticResource mathConverter},ConverterParameter=x-20 }"/>
                    <Button Content="For selected"  Grid.ColumnSpan="2" Height="30" Margin="5"
                            Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid},Path=ActualWidth, Converter= {StaticResource mathConverter},ConverterParameter=x-20 }"/>
                </StackPanel>

                <ProgressBar Height="20" Margin="5" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid},Path=ActualWidth, Converter= {StaticResource mathConverter},ConverterParameter=x-10 }" VerticalAlignment="Bottom"
                             Minimum="0" Maximum="100" x:Name="wPbStatus"/>
            </Grid>
        </Border>
    </Grid>
</UserControl>